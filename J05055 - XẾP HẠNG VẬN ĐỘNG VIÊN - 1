package myjava1;

import java.util.*;
import static java.lang.Math.*;
import java.io.*;
import java.lang.*;
import java.text.*;
import java.time.*;
import java.math.*;
class VDV implements Comparable<VDV>{
    private int ma;
    private String ten, ns, st, end;

    public VDV(int ma, String ten, String ns, String st, String end) {
        this.ma = ma;
        this.ten = ten;
        this.ns = ns;
        this.st = st;
        this.end = end;
    }
    public String getMa(){
        return "VDV" + String.format("%02d", ma);
    }
    public String getTttt(){
         int h1 = Integer.parseInt(st.substring(0, 2));
         int h2 = Integer.parseInt(end.substring(0, 2));
         int m1 = Integer.parseInt(st.substring(3, 5));
         int m2 = Integer.parseInt(end.substring(3, 5));
         int s1 = Integer.parseInt(st.substring(6));
         int s2 = Integer.parseInt(end.substring(6));
         int tong1 = h1 * 3600 + m1 * 60 + s1;
         int tong2 = h2 * 3600 + m2 * 60 + s2;
         int tong3 = tong2 - tong1;
         int h3 = tong3 / 3600;
         tong3 %= 3600;
         int m3 = tong3 / 60;
         tong3 %= 60;
         int s3 = tong3;
         String ans = Integer.toString(h3) + ":" + Integer.toString(m3) + ":" + Integer.toString(s3);
         if(ans.charAt(1) == ':') ans = "0" + ans;
         if(ans.charAt(4) == ':') ans = ans.substring(0, 3) + "0" + ans.substring(3);
         if(ans.length() == 7) ans = ans.substring(0, 6) + "0" + ans.substring(6);
         return ans;
    }
    public String getUt(){
        int tmp = 2021 - Integer.parseInt(ns.substring(6));
        if(tmp < 18){
            return "00:00:00";
        }
        else if(tmp >= 18 && tmp < 25) return "00:00:01";
        else if(tmp >= 25 && tmp < 32) return "00:00:02";
        else return "00:00:03";
    }
    public String getTtut(){
        String ans1 = getTttt();
        String ans2 = getUt();
        int h1 = Integer.parseInt(ans1.substring(0, 2));
         int h2 = Integer.parseInt(ans2.substring(0, 2));
         int m1 = Integer.parseInt(ans1.substring(3, 5));
         int m2 = Integer.parseInt(ans2.substring(3, 5));
         int s1 = Integer.parseInt(ans1.substring(6));
         int s2 = Integer.parseInt(ans2.substring(6));
         int tong1 = h1 * 3600 + m1 * 60 + s1;
         int tong2 = h2 * 3600 + m2 * 60 + s2;
         int tong3 = tong1 - tong2;
         int h3 = tong3 / 3600;
         tong3 %= 3600;
         int m3 = tong3 / 60;
         tong3 %= 60;
         int s3 = tong3;
         String ans = Integer.toString(h3) + ":" + Integer.toString(m3) + ":" + Integer.toString(s3);
         if(ans.charAt(1) == ':') ans = "0" + ans;
         if(ans.charAt(4) == ':') ans = ans.substring(0, 3) + "0" + ans.substring(3);
         if(ans.length() == 7) ans = ans.substring(0, 6) + "0" + ans.substring(6);
         return ans;
    }
    public int getSort(){
        String ans1 = getTtut();
        int h1 = Integer.parseInt(ans1.substring(0, 2));
        int m1 = Integer.parseInt(ans1.substring(3, 5));
        int s1 = Integer.parseInt(ans1.substring(6));
        return h1 * 3600 + m1 * 60 + s1;
    }
    @Override
    public String toString(){
        return getMa() + " " + ten + " " + getTttt() + " " + getUt() + " " + getTtut();
    }    

    @Override
    public int compareTo(VDV o) {
        return getSort() - o.getSort();
    }
}
public class Myjava1 {

    public static void main(String[] args) throws IOException, ClassNotFoundException {
        Scanner sc = new Scanner(System.in);
        int n = Integer.parseInt(sc.nextLine());
        ArrayList<VDV> a = new ArrayList<>();
        ArrayList<VDV> b = new ArrayList<>();
        for(int i = 1 ; i <= n;i++){
           VDV tmp = new VDV(i, sc.nextLine(), sc.nextLine(), sc.nextLine(), sc.nextLine());
           a.add(tmp);
           b.add(tmp);
        }
        Collections.sort(a);
        HashMap<String, Integer> map = new HashMap<>();
        int ans = 0, cnt = 1;
        for(int i = 0 ; i < a.size();i++){
            if(!map.containsKey(a.get(i).getTtut())){
                ans += cnt;
                map.put(a.get(i).getTtut(), ans);
                cnt = 1;
            }
            else{
                cnt++;
            }
        }
        for(VDV x : b){
            System.out.println(x + " " + map.get(x.getTtut()));
        }
    }
}
