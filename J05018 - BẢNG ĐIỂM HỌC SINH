package myjava1;
import java.util.*;
import static java.lang.Math.*;
import java.io.*;
import java.lang.*;
import java.text.*;
import java.time.*;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.Map.Entry;
class HS implements Comparable<HS>{
    private int ma;
    private String ten, point;

    public HS(int ma, String ten, String point) {
        this.ma = ma;
        this.ten = ten;
        this.point = point;
    }
    public String getMa(){
        return "HS" + String.format("%02d", ma);
    }
    public float getDTB(){
        String arr[] = point.split("\\s+");
        float diem = 0;
        for(int i = 0 ; i < arr.length;i++){
            diem += Float.parseFloat(arr[i]);
            if(i == 0 || i == 1) diem += Float.parseFloat(arr[i]);
        }
        diem /= 12f;
        return round(diem * 10f) / 10f;
    }
    public String getXL(){
        if(getDTB() >= 9) return "XUAT SAC";
        else if(getDTB() >= 8 && getDTB() < 9) return "GIOI";
        else if(getDTB() >= 7 && getDTB() < 8) return "KHA";
        else if(getDTB() >= 5 && getDTB() < 7) return "TB";
        else return "YEU";
    }
    @Override
    public String toString(){
        return getMa() + " " + ten + " " + String.format("%.1f", getDTB()) + " " + getXL();
    }

    @Override
    public int compareTo(HS o) {
       if(getDTB() > o.getDTB()) return -1;
       else if(getDTB() < o.getDTB()) return 1;
       else return getMa().compareTo(o.getMa());
    }
    
}
public class Myjava1{
          
      public static void main(String[] args) throws IOException{
      //Scanner sc = new Scanner(new File("/Users/anhduc/NetBeansProjects/myjava1/src/myjava1/DATA.in"));
      Scanner sc = new Scanner(System.in);
      int n = Integer.parseInt(sc.nextLine());
      ArrayList<HS> a = new ArrayList<>();
      for(int i = 1 ; i <= n;i++){
          a.add(new HS(i, sc.nextLine(), sc.nextLine()));
      }
      Collections.sort(a);
      for(HS x : a){
          System.out.println(x);
      }
    }
 }
